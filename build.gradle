buildscript {
    repositories {
        jcenter()
    }

    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.cloud.tools:appengine-gradle-plugin:$appengine_plugin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.google.cloud.tools.appengine'

group 'ca.etsmtl.applets.notre_dame.whatsnew'
version '0.0.1'
mainClassName = "ca.etsmtl.applets.notre_dame.whatsnew.WhatsNewKt"


sourceSets {
    main.kotlin.srcDirs = ['src/main/kotlin']
    test.kotlin.srcDirs = ['test']
    main.resources.srcDirs = ['src/main/resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "io.ktor:ktor-metrics:$ktor_version"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-auth-jwt:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"
    compile "org.kodein.di:kodein-di-generic-jvm:$kodein_version"
    compile "org.litote.kmongo:kmongo:3.11.1"
    compile "org.mindrot:jbcrypt:0.4"
    compile 'com.github.salomonbrys.kotson:kotson:2.5.0'

    // FIRESTORE
    compile "com.google.cloud:google-cloud-firestore:$firestore_version"
    
    implementation "io.ktor:ktor-locations:$ktor_version"
    testCompile "io.ktor:ktor-server-tests:$ktor_version"
    
}
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinTest).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

appengine {
    deploy {
        projectId = "whats-new-api"
        version = 'GCLOUD_CONFIG' // TODO find a way to automate that
    }
    stage {
        artifact = "build/libs/$project.name-${project.version}-all.jar"
    }
}
